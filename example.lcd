# This is a comment - any characters between a '#' and the end of the line
# are ignored.





# ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑
# Whitespace is ignored.
# ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓




# This is a declaration.
#     ↓
float foo; # ← Declarations are in the format type name;
#       ↑
#  Types and names
#  must start with
#  an alphabetic
#  character or an
#  underscore and
#  must contain
#  only alphabetic
#  characters,
#  numeric
#  characters,
#  underscores
#  or dashes.

#       Arrays can be
#       declared by
#       by specifying
#       the number of
#       elements in the
#       array, surrounded
#       by square brackets,
#       after an identifier.
#       All declarations
#       are treated as
#       arrays, with
#       an array size
#       of 1 by default.
#            ↓
double array[32];

# This is an
# annotation.
# They can
# be used to
# provide
# extra
# information
# to the
# user layer.
#    ↓
@annotation1
struct bar #   Declarations with the type 'struct' must be followed by a
{          # ← curly bracket block containing member fields.
    float member1;
#           ↑
#     Types and names
#     should not exceed
#     31 characters in
#     length.
#     Any additional
#     characters will
#     be ignored.

#                             The number
#                             of '*'
#                             present
#                             after a type
#                             represents
#                             the level of
#                             indirection.
#                                  ↓
    @annotation2 @annotation3 char *member2;
#         ↑
#   You can add
#   as many
#   annotations
#   as you like
#   to a
#   declaration.
#   Annotations
#   also should
#   not exceed
#   31
#   characters
#   in length
#   ( including
#   the '@' ).
}

